openapi: 3.0.3
info:
  title: Läss Privacy API
  description: GDPR-compliant user data management endpoints
  version: 1.0.0
  contact:
    name: Läss Development
    url: https://github.com/longfangsong/lass

servers:
  - url: https://lass.example.com/api
    description: Production server
  - url: http://localhost:8787/api
    description: Local development (Cloudflare Workers)

tags:
  - name: privacy
    description: User privacy and data management operations

security:
  - cookieAuth: []

paths:
  /settings:
    get:
      tags:
        - settings
      summary: Get user settings (with optional export format)
      description: |
        Retrieves the user's settings. When format parameter is provided, exports
        settings data in the specified format for download.
      operationId: getUserSettings
      parameters:
        - name: format
          in: query
          description: Optional export format (json or csv). When provided, triggers data export.
          required: false
          schema:
            type: string
            enum: [json, csv]
      responses:
        '200':
          description: User settings retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsResponse'
              examples:
                normalResponse:
                  summary: Normal settings retrieval
                  value:
                    autoNewReview: 2
                    dailyNewReviewCount: 10
                    updatedAt: "2025-10-20T08:00:00Z"
                exportResponse:
                  summary: Settings export (format=json)
                  value:
                    email: "user@example.com"
                    autoNewReview: 2
                    dailyNewReviewCount: 10
                    registeredAt: "2025-01-15T10:00:00Z"
                    updatedAt: "2025-10-20T08:00:00Z"
            text/csv:
              schema:
                type: string
                format: csv
              examples:
                csvExport:
                  summary: Settings export (format=csv)
                  value: |
                    email,autoNewReview,dailyNewReviewCount,registeredAt,updatedAt
                    user@example.com,2,10,2025-01-15T10:00:00Z,2025-10-20T08:00:00Z
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    
    delete:
      tags:
        - settings
      summary: Delete user settings (account deletion)
      description: |
        Deletes the user's settings record from D1 database.
        This effectively deletes the user's account (consent removal).
        
        Note: This only deletes UserSettings. Use DELETE /word_book_entry to delete wordbook data.
        Confirmation should be handled on the frontend before calling this endpoint.
      operationId: deleteUserSettings
      responses:
        '200':
          description: Settings deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletionResponse'
              examples:
                success:
                  value:
                    deletedAt: "2025-10-21T14:35:00Z"
                    recordsDeleted: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /word_book_entry:
    get:
      tags:
        - wordbook
      summary: Get word book entries (with optional export format)
      description: |
        Retrieves the user's word book entries. When format parameter is provided,
        exports all entries in the specified format for download.
      operationId: getWordBookEntries
      parameters:
        - name: format
          in: query
          description: Optional export format (json or csv). When provided, triggers data export.
          required: false
          schema:
            type: string
            enum: [json, csv]
      responses:
        '200':
          description: Word book entries retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WordBookEntry'
              examples:
                normalResponse:
                  summary: Normal entries retrieval (minimal fields)
                  value:
                    - id: "abc-123"
                      wordId: "word-456"
                      lemma: "hej"
                      passiveReviewCount: 5
                      activeReviewCount: 0
                      addedAt: "2025-01-20T12:00:00Z"
                exportResponse:
                  summary: Entries export (format=json, all fields)
                  value:
                    - id: "abc-123"
                      wordId: "word-456"
                      lemma: "hej"
                      partOfSpeech: "interjection"
                      passiveReviewCount: 5
                      nextPassiveReviewTime: "2025-11-01T00:00:00Z"
                      activeReviewCount: 3
                      nextActiveReviewTime: "2025-10-25T00:00:00Z"
                      addedAt: "2025-01-20T12:00:00Z"
            text/csv:
              schema:
                type: string
                format: csv
              examples:
                csvExport:
                  summary: Entries export (format=csv)
                  value: |
                    id,wordId,lemma,partOfSpeech,passiveReviewCount,nextPassiveReviewTime,activeReviewCount,nextActiveReviewTime,addedAt
                    abc-123,word-456,hej,interjection,5,2025-11-01T00:00:00Z,3,2025-10-25T00:00:00Z,2025-01-20T12:00:00Z
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    
    delete:
      tags:
        - wordbook
      summary: Delete all word book entries
      description: |
        Deletes all of the user's word book entries from D1 database.
        This is a bulk deletion operation for GDPR compliance.
        
        Note: This only deletes WordBookEntry records. Use DELETE /settings to delete account.
        Confirmation should be handled on the frontend before calling this endpoint.
      operationId: deleteWordBookEntries
      responses:
        '200':
          description: Word book entries deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletionResponse'
              examples:
                success:
                  value:
                    deletedAt: "2025-10-21T14:35:00Z"
                    recordsDeleted: 127
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: auth_token
      description: JWT token stored in httpOnly cookie

  schemas:
    UserSettingsResponse:
      type: object
      properties:
        autoNewReview:
          type: integer
          minimum: 0
          maximum: 3
          example: 2
        dailyNewReviewCount:
          type: integer
          minimum: 0
          example: 10
        updatedAt:
          type: string
          format: date-time
          example: "2025-10-20T08:00:00Z"

    WordBookEntry:
      type: object
      required:
        - id
        - wordId
        - lemma
        - passiveReviewCount
        - activeReviewCount
        - addedAt
      properties:
        id:
          type: string
          description: WordBookEntry UUID
          example: "abc-123"
        wordId:
          type: string
          description: Foreign key to Word table
          example: "word-456"
        lemma:
          type: string
          description: Swedish word (base form)
          example: "hej"
        partOfSpeech:
          type: string
          nullable: true
          description: Word type (noun, verb, adjective, etc.)
          example: "interjection"
        passiveReviewCount:
          type: integer
          description: Number of passive reviews completed
          minimum: 0
          example: 5
        nextPassiveReviewTime:
          type: string
          format: date-time
          nullable: true
          description: ISO 8601 timestamp of next passive review (null if never scheduled)
          example: "2025-11-01T00:00:00Z"
        activeReviewCount:
          type: integer
          description: Number of active reviews completed
          minimum: 0
          example: 3
        nextActiveReviewTime:
          type: string
          format: date-time
          nullable: true
          description: ISO 8601 timestamp of next active review (null if never scheduled)
          example: "2025-10-25T00:00:00Z"
        addedAt:
          type: string
          format: date-time
          description: ISO 8601 timestamp when word was added
          example: "2025-01-20T12:00:00Z"

    DeletionResponse:
      type: object
      properties:
        deletedAt:
          type: string
          format: date-time
          example: "2025-10-21T14:35:00Z"
        recordsDeleted:
          type: integer
          description: Number of records deleted
          example: 1

    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Machine-readable error code
          example: "INVALID_CONFIRMATION"
        message:
          type: string
          description: Human-readable error message
          example: "Confirmation phrase does not match"
        details:
          type: object
          description: Additional error context
          additionalProperties: true

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            invalidFormat:
              summary: Invalid format parameter
              value:
                code: "INVALID_REQUEST"
                message: "Invalid format parameter. Must be 'json' or 'csv'"
    
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            notAuthenticated:
              summary: User not logged in
              value:
                code: "UNAUTHORIZED"
                message: "Authentication required to access this resource"
    
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            databaseError:
              summary: Database operation failed
              value:
                code: "INTERNAL_ERROR"
                message: "Failed to process request"
                details:
                  operation: "export"
                  reason: "Database query timeout"
